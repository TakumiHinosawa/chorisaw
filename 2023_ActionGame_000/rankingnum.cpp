//=========================================================================================
//
//ランキングナンバー表示処理 [score.cpp]
//Author:日野澤匠泉
//
//=========================================================================================

//*****************************************************************************************
//インクルード
//*****************************************************************************************
#include "rankingnum.h"
#include "number.h"
#include "object2d.h"
#include "manager.h"
#include "input.h"
#include <stdio.h>

//=========================================================================================
//コンストラクタ
//=========================================================================================
CRankingNum::CRankingNum()
{
	m_nScore = 0;
	m_nCtr = 0;
	m_pos = D3DXVECTOR3(0.0f, 0.0f, 0.0f);

	for (int nCnt = 0; nCnt < NUM_PLACE; nCnt++)
	{
		m_apNumber[nCnt] = NULL;
	}
}

//=========================================================================================
//デストラクタ
//=========================================================================================
CRankingNum::~CRankingNum()
{

}

//=========================================================================================
//スコアの初期化処理
//=========================================================================================
HRESULT CRankingNum::Init(void)
{
	for (int nCnt = 0; nCnt < NUM_PLACE; nCnt++)
	{
		//オブジェクト生成
		m_apNumber[nCnt] = CNumber::Create();
	}

	return S_OK;
}

//=========================================================================================
//スコアの終了処理
//=========================================================================================
void CRankingNum::Uninit(void)
{
	for (int nCnt = 0; nCnt < NUM_PLACE; nCnt++)
	{
		if (m_apNumber[nCnt] != NULL)
		{//使用されているとき

		 //オブジェクト終了処理
			m_apNumber[nCnt]->Uninit();

			//オブジェクトを破棄
			delete m_apNumber[nCnt];

			//オブジェクト初期化
			m_apNumber[nCnt] = NULL;
		}
	}
}

//=========================================================================================
//スコアの更新処理
//=========================================================================================
void CRankingNum::Update(void)
{
	//セットスコア
	//SetScore();
}

//=========================================================================================
//スコアの描画処理
//=========================================================================================
void CRankingNum::Draw(void)
{

}

//=========================================================================================
//スコアの設定処理
//=========================================================================================
CRankingNum *CRankingNum::Create(void)
{
	//ポインタの変数を宣言
	CRankingNum *pScore;

	//オブジェクト2Dの生成
	pScore = new CRankingNum;

	if (pScore != NULL)
	{//使用されているとき

		//初期化処理
		pScore->Init();
	}

	//オブジェクト情報を返す
	return pScore;
}

//=========================================================================================
//スコアのロード処理
//=========================================================================================
void CRankingNum::LoadRankingNum(void)
{
}

//=========================================================================================
//スコアの設定処理
//=========================================================================================
void CRankingNum::SetRankingNum(void)
{
	int aTexU[NUM_PLACE];		//各桁の数値を格納

	aTexU[0] = m_nScore % 100000000 / 10000000;
	aTexU[1] = m_nScore % 10000000 / 1000000;
	aTexU[2] = m_nScore % 1000000 / 100000;
	aTexU[3] = m_nScore % 100000 / 10000;
	aTexU[4] = m_nScore % 10000 / 1000;
	aTexU[5] = m_nScore % 1000 / 100;
	aTexU[6] = m_nScore % 100 / 10;
	aTexU[7] = m_nScore % 10;

	for (int nCnt = 0; nCnt < NUM_PLACE; nCnt++)
	{
		//スコアの設定処理
		m_apNumber[nCnt]->SetScore(D3DXVECTOR3(600.0f, 10.0f, 0.0f), nCnt, aTexU[nCnt]);
	}
}

